class Solution{
    static int nCr(int n, int r)
    {
        if(r > n)
        return 0;
        if(r==0)
        return 1;
        if(r==1)
        return n;
        long dp[][] = new long[n+1][r+1];
        for(int i = 0;i <= n;i++){
            for(int j = 0;j <= r;j++){
                dp[i][j] = 0;
            }
        }
        
        int max = 1000000007;
        dp[0][0] = 1;
        for(int i = 1;i <= n;i++){
            dp[i][0] = 1;
        }
        for(int i = 1;i <= r;i++){
            dp[0][i] = 0;
        }
        
        for(int i = 1;i <= n;i++){
            for(int j = 1;j <= r;j++){
                dp[i][j] = (dp[i-1][j-1] % max + dp[i-1][j] % max) % max;
            }
        }
        return (int)dp[n][r];
    }
}
