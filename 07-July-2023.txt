class Solution
{
    static void swap(long arr1[],long arr2[],int i,int j){
        long temp = arr1[i];
        arr1[i] = arr2[j];
        arr2[j] = temp;
    }
    
    public static void merge(long arr1[], long arr2[], int n, int m) 
    {
        int gap = (m + n)/2 + (m+n) % 2;
        while(gap > 0){
            int left = 0;
            int right = left + gap;
            while(right < n+m){
                if(left < n && right < n){
                    if(arr1[left] > arr1[right]){
                        swap(arr1,arr1,left,right);
                    }
                }
                else if(left < n && right >= n){
                    if(arr1[left] > arr2[right-n]){
                        swap(arr1,arr2,left,right-n);
                    }
                }
                else{
                    if(arr2[left-n] > arr2[right-n]){
                        swap(arr2,arr2,left-n,right-n);
                    }
                }
                right++;
                left++;
            }
            if(gap == 1)
            break;
            gap = gap/2 + gap%2;
            
        }
    }
}